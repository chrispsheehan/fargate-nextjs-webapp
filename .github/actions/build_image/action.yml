name: Build and push image

inputs:
  aws_account_id:
    description: 'AWS account id'
    required: true
  aws_region:
    description: 'AWS region'
    required: true
  aws_role:
    description: 'AWS role to assume'
    required: true

runs:
  using: composite
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ inputs.aws_region }}
        role-to-assume: arn:aws:iam::${{ inputs.aws_account_id }}:role/${{ inputs.aws_role }}
        role-session-name: GitHubActions

    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup aws ECR
      env:
        REPO_NAME: ${{ github.event.repository.name }}
        AWS_REGION: ${{ inputs.aws_region }}
      shell: bash
      run: |
        bash bin/create_ecr_repo.sh

    - name: Build
      env:
        LOCAL_IMAGE: ${{ github.event.repository.name }}:local
        ECR_BASE: ${{ inputs.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com
        ECR_URL: ${{ inputs.AWS_ACCOUNT_ID }}.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com/${{ github.event.repository.name }}
        IMAGE_TAG: $(echo $GITHUB_SHA | cut -c 1-6)
      shell: bash
      run: |
        docker build . -t ${{ env.LOCAL_IMAGE }}
        docker tag ${{ env.LOCAL_IMAGE }} ${{ env.ECR_URL }}:${{ env.IMAGE_TAG }}
        aws ecr get-login-password --region ${{ env.aws_region }} | docker login --username AWS --password-stdin ${{ env.ECR_BASE }}
        docker push ${{ env.ECR_URL }}:${{ env.IMAGE_TAG }}
